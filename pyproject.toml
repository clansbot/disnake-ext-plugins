
[project]
authors = [{ name = "Chromosomologist", email = "chromosomologist@gmail.com" }]
license = { text = "MIT" }
requires-python = "<4.0,>=3.13"
dependencies = ["disnake @ git+https://github.com/clansbot/disnake@master"]
name = "disnake-ext-plugins"
version = "0.3.0"
description = "An extension for disnake providing a robust alternative to cogs."
readme = "README.md"
keywords = [
    "disnake",
    "disnake.ext",
    "discord",
    "cogs",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]

[project.urls]
repository = "https://github.com/Chromosomologist/disnake-ext-plugins"

[project.scripts]
dev-symlink = "scripts.symlink:_main"

[dependency-groups]
dev = [
    "pre-commit<4.0,>=3.4",
    "taskipy<2.0.0,>=1.10.1",
    "black~=22.8.0",
    "pyright~=1.1.272",
    "slotscheck~=0.15.0",
    "ruff<1.0,>=0.6",
]
[tool.pdm.build]
includes = ["src/disnake/ext/plugins"]

# Prevent devs from installing this package in editable mode as it doesn't play nice with pyright
# Usually adding flag only to install would be enough, i'm just being extra careful here
[tool.pdm.options]
install = ["--no-editable"]
add = ["--no-editable"]
remove = ["--no-editable"]
sync = ["--no-editable"]
update = ["--no-editable"]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pyright]
pythonVersion = "3.13"
include = ["src/disnake/ext/plugins"]
typeCheckingMode = "strict"
reportMissingTypeStubs = false
reportPrivateUsage = false
reportImportCycles = false

[tool.black]
line-length = 100

[tool.ruff]
target-version = "py313"
line-length = 100

exclude = [
    "examples",
]

select = ["ALL"]
ignore = [
    # Magic methods do not need documentation.
    "D105",
    # Class docstrings are at the class level.
    "D107",
    # Docstrings start on first line after class definition (incompatibility between D203 and D211).
    "D203",
    # Docstrings start on the first line (`"""text\n..."""`; incompatibility between D212 and D213).
    "D213",
    # TODO / HACK comments do not need to be flagged.
    "FIX002", "FIX004",
    # Pyright error codes are obnoxiously long.
    "PGH003",
    # TODO comments do not need to have an author or issue specified.
    "TD002", "TD003",
]

[tool.ruff.pyupgrade]
keep-runtime-typing = true

[tool.ruff.pylint]
max-args = 10

[tool.ruff.per-file-ignores]
"scripts/*" = [
    # Allow printing in scripts.
    "T201",
]
"__init__.py" = [
    # Wildcard imports are fine in __init__; duplicating exports is a pain to maintain.
    "F403",
    "F405",
]
